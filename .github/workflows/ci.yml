name: CI Pipeline for Test Automation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Test Tag (e.g., api, e2e, integration)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}"
          restore-keys: |
            "${{ runner.os }}-maven-"

      - name: Start the server in the background
        run: |
          nohup java -jar dynata-surveys-0.0.1-SNAPSHOT.jar > server.log 2>&1 &

      - name: Build and Test with Maven
        run: |
          if [[ -n "${{ github.event.inputs.tag }}" ]]; then
            mvn clean install -Dgroups=${{ github.event.inputs.tag }} -Dgatling.skip=true
          else
            mvn clean install -Dgatling.skip=true
          fi

      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.32.2/allure-2.32.2.zip
          unzip allure-2.32.2.zip
          sudo mv allure-2.32.2 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
          chmod +x /opt/allure/bin/allure
          allure --version

      - name: Generate Allure Report with CLI
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S") 
          REPORT_DIR="allure-report-$TIMESTAMP" 
          allure generate --single-file target/allure-results --clean -o target/allure-report/$REPORT_DIR --clean
          echo "REPORT_DIR=$REPORT_DIR" >> $GITHUB_ENV 

      - name: Cleanup Old Reports (Keep Last 10)
        run: |
          git fetch --depth=1 origin allure-reports
          git checkout allure-reports

          mkdir -p allure-reports
          cd allure-reports

          # Sort folders by time and remove older ones, keeping the latest 10
          if [ $(ls -1t | wc -l) -gt 10 ]; then
            ls -1t | tail -n +11 | xargs rm -rf
          else
            echo "âœ… Less than 10 reports exist, skipping cleanup."
          fi

          cd ..
          git add .
          git commit -m "Cleanup old Allure reports [skip ci]" || exit 0
          git push origin allure-reports

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./target/allure-report/${{ env.REPORT_DIR }}
          destination_dir: allure-reports/${{ env.REPORT_DIR }}
          publish_branch: allure-reports
          keep_files: true
          commit_message: "Deploy Allure report [skip ci]"

      - name: Get Report URL
        id: report_url
        run: echo "url=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/${{ env.REPORT_DIR }}/index.html" >> $GITHUB_ENV

      - name: Add Report Link to Workflow Summary
        run: |
          echo "### âœ… Allure Report" >> $GITHUB_STEP_SUMMARY
          echo "[ðŸ“Š View Report](${{ env.url }})" >> $GITHUB_STEP_SUMMARY

      - name: Comment with Report Link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const repo = context.repo;
            const runId = context.runId;
            const reportUrl = process.env.url;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: repo.owner,
              repo: repo.repo,
              body: `âœ… **Allure Report for Run #${runId}:** [View Report](${reportUrl})`
            });